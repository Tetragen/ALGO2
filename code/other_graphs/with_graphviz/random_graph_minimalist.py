"""
Generating a random graph
"""

import random
from graphviz import Graph
dot = Graph(comment='Random graph generated by python')

# number of nodes
n = 50
# number of edges
p = 100

if p > n * (n - 1) / 2:
    raise ValueError('The number of edges is too large !')

# in an undirected graph, we dont need to consider the inverse of an edge
all_edges = [{i, j} for i in range(1, n + 1) for j in range(i + 1, n + 1)]
# remove edges from one node to itself
all_edges = [edge for edge in all_edges if len(edge) == 2]
# shuffle the order of the edges
random.shuffle(all_edges)

# double check that we did not make an error while creating our set of edges
if len(all_edges) == n * (n - 1) / 2:
    print("il y a bien n(n-1)/2=" +
          str(int(n * (n - 1) / 2)) + " arÃªtes possibles")

# take edges in the shuffled list of edges
for j in range(p - 1):
    random_edge = all_edges.pop()
    node_a = str(random_edge.pop())
    node_b = str(random_edge.pop())
    # some_color = colors[random.randint(1, len(colors) - 1)]
    some_width = str(random.uniform(1, 2))
    dot.edge(node_a,
             node_b,
             color='darkolivegreen4',
             penwidth='1.1')

# visualize the graph
graph_name = 'images/minimal_rand_' + str(n) + '_vx_' + str(p) + '_edgs'
dot.render(graph_name)
